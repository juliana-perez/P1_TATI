<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        98clNB3XG1T0KRy5SalnTVBUs6rkXjhe5fA4TTExMXhnmJjSQAEngAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeo1zuqmV/vwT7zwsUVt
        8jbZIpE9LXVDZpvstVu7Z/qz7yFdeX3p005kvcqdli2UfTxfTzaY5Hpzc+TrfdlEMnXJtmt9LaKFnlFz
        ViJuW8dL3cXOf8VM9p4aq4VdDbaPhIirUSPXkxG9Frl+OcGUvmvZaidKnpqyb138ZZX9uV7G9/8Ac5kT
        emL96qqZm336OhOlU27tNMWv9uqqX2lWjfFBO/e1z8z1snPpP6rPgiHr18zU27bwudQ30r+2nid6idz3
        Jz7kFE90ktTfK70m5dljV5SVDvo2+5vP3EXLLJNI+WV2qSRVc9y9qrzOhTEz3Z4b+fLyYpm2scdvJKRS
        R3eNtNUORlxYmmmqXcEmROUUq+17LjGO2xUTPKLu1zOe5oU6Msipwy72GZ7e3sMKCCGCBbpWN1xMdppY
        F/bSp3/Ub2/I6PKG330VW5rLn/h6jqtlTnun9y+yvwIzpt4OPTy+r2Nd/Fw/LhrLlUVaJG7EVOz6KliT
        TG34dvvU5WMfI5GRtV715NamVX4ISEFpVjXVFzV1JTMcrMKnpZHN5sjav48j195kjYsNtjShhXgqs4zP
        +3Lz+ROJ4UR9kJjjV+WUVku0WJHq2iymNU8rYlwvPhnV9x2w2qNLNVRecKTpTxO3iPXQmEd0VXTzXsK8
        5Vcupy6nLzcvFfmSMH/l+s/5mD+l55XFXPjHDqlTNPLhPHoy8w165WlfDVcP8PK1y4+yuFOWppFp2pnU
        yRE9NDKmh7F8EXrN8UObtz295KUW0FfTKxJVSriZ1Y5+krezoPXpNU9nPHKfRGMk849U1sZXVMNW+11G
        vS5m8gY71e1ceCopZrvbIrnQyUz0TUqZievqv7HEBa2UNwpn1FHO9lZSpI6BVRFnj3mVc1zU4SNzyXxJ
        fZ2WsdQ7q4TJJWRr6RmU1sR3FiSY9bBzcfx540mLXjrzdDB8OSdYnj9FMdGyxZ1aZbqvUTm2nb7a9717
        O4wpJkukSW6rf+kplaCqevHUvFYXr3O7O5Sw7V7N79H3GiYq1HDfRN9dPaRPaKQbsKYxKc38vlP2Y8SJ
        w6rfx+aRtNIyeufb6j0MsqLHG9eCxztXLfvTBbKC7ufrsd9buqpzVjbI7qTNXhlF5ZKvXOWtpIrvGuKm
        JzYq1U560+im/ixhfEs9uq7dtPQeS17U8riTpY4O/wAyNfxKe0axeY0423pnn5LcDSbRvw5VRya9m6dt
        Xaa2y1qavJZXRLnmiLxRU9zsqhTKqmlpZ5IJOcT3RqverS62ajq7TfpaepessdZH6CoX11i7HfWRpx1t
        ubXX+7UCdaSJk8K90rUbj56sKMPEy4lX+MxFX3K8O9FP+UTl+yogKioqo5MKnBU8Qb2IAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB022n
        SquNLTrylla13uzx+4um1Kbuuss/YypRvzVv9ip2BdN5onr1d81ufF2UQuG2TkjoKWfTqWGqjcje/GeH
        xMOPP9aiOk+rZgx/SqnrHozu94gtMr2xM8puVWqbuFO5ODM47PAqe0MFVC6B1wk3lwnRZZu6NnJkbfvL
        XZrUlGkt4uqotdKiySvdyibz0p8P7FWbUeetpY5pE9C6TVpXshi6XH4NIdntEzbWKY1q59I6JY15iL71
        TpHLrPVou/6NHS2tP8MzeVHjPKmp38rcIcdFSSVtXFSx8HSuxq7k5ucvuTiY1VQ6qqpql3OZ7n/zLk7r
        f+jW2vrvXciUkC+MvGRf5ENmtNHX6yy6VVdPpDTdauOpqUZBwpKdN1St+o31ve5eKnttpIZEkrKzPkVN
        hZETgsj16sTfFe3uQ4fBPghJ3hfJ0gtLF6NImZ8etUPTL1/h6qHs6Wpj9gjW9UuiSrbtAu6qNMFwblKN
        /KN7c5SF2eS+yvzI2C3VtRUupo4l3sed6juikeOavVeCIYUlLLWVMdND15F5ryROauXwROJYq2dK9nml
        HSQS4b5NUTdBK3Qmn0iqic/UK5nJpTt8k4jPrO/zRbo7LTqvlM8lwn9ZKfoRZ/zHcV+CHbFWWvzNVOS2
        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
</value>
  </data>
</root>